<?xml version="1.0"?>
<block>
  <name>Modulator</name>
  <key>ecss_modulator</key>
  <category>[ecss]</category>
  <import>import ecss</import>
  <make>ecss.modulator($framebits, $k, $rate, $polys, $state_start, $mode, $padding, $samp_rate, $bit_rate, $sel_convolutional, $sel_encoder, $sel_srrc, $roll_off, $num_taps, $sine, $freq_sub)</make>

  <param>
    <name>Type Encoder</name>
    <key>sel_encoder</key>
    <value>0</value>
    <type>enum</type>
    <option>
      <name>SP-L</name>
      <key>0</key>
    </option>
    <option>
      <name>NRZ-L</name>
      <key>1</key>
    </option>
    <option>
      <name>NRZ-L with Sub-carrier</name>
      <key>2</key>
    </option>
  </param>

  <param>
    <name>Convolutional Encoder</name>
    <key>sel_convolutional</key>
    <value>0</value>
    <type>enum</type>
    <option>
      <name>On</name>
      <key>0</key>
    </option>
    <option>
      <name>Off</name>
      <key>1</key>
    </option>
  </param>

  <param>
    <name>Root-Raised Cosine Filter</name>
    <key>sel_srrc</key>
    <value>0</value>
    <type>enum</type>
    <option>
      <name>On</name>
      <key>0</key>
    </option>
    <option>
      <name>Off</name>
      <key>1</key>
    </option>
  </param>

  <param>
    <name>Sampling Rate</name>
    <key>samp_rate</key>
    <value>samp_rate</value>
    <type>real</type>
  </param>

  <param>
    <name>Bit Rate</name>
    <key>bit_rate</key>
    <value>bit_rate</value>
    <type>real</type>
  </param>

  <param>
    <name>Sub-carrier Signal</name>
    <key>sine</key>
    <value>True</value>
    <type>bool</type>
    <hide>#if (int($sel_encoder()) >= 2) then 'none' else 'all' #</hide>
    <option>
      <name>Sine</name>
      <key>True</key>
    </option>
    <option>
      <name>Square</name>
      <key>False</key>
    </option>
  </param>
  
  <param>
    <name>Sub-carrier frequency</name>
    <key>freq_sub</key>
    <value>16000</value>
    <type>real</type>
    <hide>#if (int($sel_encoder()) >= 2) then 'none' else 'all' #</hide>
  </param>
  
  <!-- <param>
    <name>CE: Parallelism</name>
    <key>ndim</key>
    <value>0</value>
    <type>enum</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
    <option>
      <name>0</name>
      <key>0</key>
    </option>
    <option>
      <name>1</name>
      <key>1</key>
    </option>
    <option>
      <name>2</name>
      <key>2</key>
    </option>
  </param> -->

  <!-- <param>
    <name>CE: Dimension 1</name>
    <key>dim1</key>
    <value>1</value>
    <type>int</type>
    <hide>#if (int($ndim()) >= 1) then 'none' else 'all' #</hide>
  </param>

  <param>
    <name>CE: Dimension 2</name>
    <key>dim2</key>
    <value>1</value>
    <type>int</type>
    <hide>#if (int($ndim()) >= 2) then 'none' else 'all' #</hide>
  </param> -->

  <param>
    <name>CE: Frame Bits</name>
    <key>framebits</key>
    <value>2048</value>
    <type>int</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
  </param>

  <param>
    <name>CE: Constraint Length (K)</name>
    <key>k</key>
    <value>7</value>
    <type>int</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
  </param>

  <param>
    <name>CE: Rate Inverse (1/R) (1/2) --> 2</name>
    <key>rate</key>
    <value>2</value>
    <type>int</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
  </param>

  <param>
    <name>CE: Polynomials</name>
    <key>polys</key>
    <value>[79,109]</value>
    <type>int_vector</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
  </param>

  <param>
    <name>CE: Start State</name>
    <key>state_start</key>
    <value>0</value>
    <type>int</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
  </param>

  <param>
    <name>CE: Streaming Behavior</name>
    <key>mode</key>
    <value></value>
    <type>enum</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
    <option>
        <name>Streaming</name>
        <key>fec.CC_STREAMING</key>
    </option>
    <option>
        <name>Terminated</name>
        <key>fec.CC_TERMINATED</key>
    </option>
    <option>
        <name>Tailbiting</name>
        <key>fec.CC_TAILBITING</key>
    </option>
    <option>
        <name>Truncated</name>
        <key>fec.CC_TRUNCATED</key>
    </option>
  </param>

  <param>
    <name>CE: Byte Padding</name>
    <key>padding</key>
    <value>False</value>
    <type>enum</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
    <option>
        <name>No</name>
        <key>False</key>
    </option>
    <option>
        <name>Yes</name>
        <key>True</key>
    </option>
  </param>
<!-- 
  <param>
    <name>CE: Threading Type</name>
    <key>threading</key>
    <type>enum</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
    <option>
      <name>Capillary</name>
      <key>capillary</key>
      <opt>arg:'capillary'</opt>
    </option>
    <option>
      <name>Ordinary</name>
      <key>ordinary</key>
      <opt>arg:'ordinary'</opt>
    </option>
    <option>
      <name>None</name>
      <key>none</key>
      <opt>arg: None</opt>
    </option>
  </param>

  <param>
    <name>CE: Puncture Pattern</name>
    <key>puncpat</key>
    <value>'11'</value>
    <type>string</type>
    <hide>#if (int($sel_convolutional()) >= 1) then 'all' else 'none' #</hide>
  </param> -->

  <param>
		<name>RRC Filter: Roll-off factor</name>
		<key>roll_off</key>
		<value>0.35</value>
		<type>real</type>
    <hide>#if (int($sel_srrc()) >= 1) then 'all' else 'none' #</hide>
	</param>

	<param>
		<name>RRC Filter: Num Taps</name>
		<key>num_taps</key>
		<value>11*samp_rate</value>
		<type>int</type>
    <hide>#if (int($sel_srrc()) >= 1) then 'all' else 'none' #</hide>
	</param>
  

  <sink>
    <name>in</name>
    <type>byte</type>
  </sink>
  <source>
    <name>out</name>
    <type>float</type>
  </source>
</block>
