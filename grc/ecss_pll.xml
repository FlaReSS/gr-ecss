<?xml version="1.0"?>
<block>
  <name>pll</name>
  <key>ecss_pll</key>
  <category>[ecss]</category>
  <import>import ecss</import>
  <make>ecss.pll($samp_rate, $enable, $order, $N, $Coeff_1, $Coeff_2, $Coeff_3, $Coeff_4, $max_freq, $min_freq)</make>
  <callback>set_enable($enable)</callback>
  <callback>set_order($order)</callback>
  <callback>set_coeff1($Coeff_1)</callback>
  <callback>set_coeff2($Coeff_2)</callback>
  <callback>set_coeff3($Coeff_3)</callback>
  <callback>set_coeff4($Coeff_4)</callback>
  <callback>set_max_freq($max_freq)</callback>
  <callback>set_min_freq($min_freq)</callback>

  <param>
    <name>enable</name>
    <key>enable</key>
    <type>int</type>
  </param>
  <param>
    <name>sample rate</name>
    <key>samp_rate</key>
    <type>int</type>
  </param>
  <param>
    <name>order</name>
    <key>order</key>
    <type>int</type>
  </param>
  <param>
    <name>N of bits</name>
    <key>N</key>
    <type>int</type>
  </param>
  <param>
    <name>Coeff 1</name>
    <key>Coeff_1</key>
    <type>real</type>
  </param>
  <param>
    <name>Coeff 2</name>
    <key>Coeff_2</key>
    <type>real</type>
  </param>
  <param>
    <name>Coeff 3</name>
    <key>Coeff_3</key>
    <type>real</type>
  </param>
  <param>
    <name>Coeff 4</name>
    <key>Coeff_4</key>
    <type>real</type>
  </param>
  <param>
    <name>Max Freq</name>
    <key>max_freq</key>
    <type>real</type>
  </param>
  <param>
    <name>Min Freq</name>
    <key>min_freq</key>
    <type>real</type>
  </param>

  <check>$Coeff_1 &gt;= 0 and $Coeff_1 &lt;= 1</check>
  <check>$Coeff_2 &gt;= 0 and $Coeff_2 &lt;= 1</check>
  <check>$Coeff_3 &gt;= 0 and $Coeff_3 &lt;= 1</check>
  <check>$Coeff_4 &gt;= 0 and $Coeff_4 &lt;= 1</check>
  <check>$order == 2 or $order == 3</check>
  <check>$enable == 0 or $enable == 1</check>
  <check>$N &gt;= 1 and $N &lt;= 52</check>

  <sink>
    <name>in</name>
    <type>complex</type>
  </sink>

  <source>
    <name>out</name>
    <type>complex</type>
  </source>

  <source>
    <name>freq</name>
    <type>float</type>
    <optional>1</optional>
  </source>

  <source>
    <name>phase error</name>
    <type>float</type>
    <optional>1</optional>
  </source>

  <source>
    <name>phase accumulator</name>
    <type>s64</type>
    <optional>1</optional>
  </source>

  <doc>
    This block generates a complex output signal which is the complex multiplication between the input and the reference signal generated by PLL.

    The ecss PLL provide in output the value of frequency (expressed in Hz) of the internal reference signal, the output of the phase detector (espressed in rad in range [-pi; pi]) and the int64 value of the internal integer accumulator (useful for the ecss coherent phase accumulator).

    Furthermore, this block allows to reduce the accuracy (setting the number of bits N) of the mathematics in order to simulate properly a real behavior.
  </doc>

  </block>
