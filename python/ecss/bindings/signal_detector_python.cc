/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(signal_detector.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(1cd24ef75fe91f50e33f333a017f687d)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ecss/signal_detector.h>

// pydoc.h is automatically generated in the build directory
#include <signal_detector_pydoc.h>

void bind_signal_detector(py::module& m)
{

    using signal_detector    = ::gr::ecss::signal_detector;


    py::class_<signal_detector, gr::sync_decimator,
        std::shared_ptr<signal_detector>>(m, "signal_detector", D(signal_detector))
        
        .def(py::init(&signal_detector::make),
            py::arg("modulation"),
            py::arg("samp_rate"),
            py::arg("fft_size"),
            py::arg("threshold"),
            py::arg("decimation"),
            py::arg("search_bandwidth"),
           D(signal_detector,make)
        )
        

        // .def("set_threshold",&signal_detector::set_threshold,       
        //     py::arg("threshold"),
        //     D(signal_detector,set_threshold)
        // )

        // .def("set_fft_size",&signal_detector::set_fft_size,       
        //     py::arg("fft_size"),
        //     D(signal_detector,set_fft_size)
        // )

        // // .def("set_decimation",&signal_detector::set_decimation,       
        // //     py::arg("decimation"),
        // //     D(signal_detector,set_decimation)
        // // )

        // .def("set_modulation",&signal_detector::set_modulation,       
        //     py::arg("modulation"),
        //     D(signal_detector,set_modulation)
        // )

        // .def("get_threshold",&signal_detector::get_threshold,       
        //     D(signal_detector,get_threshold)
        // )

        // .def("set_threshold",&signal_detector::set_threshold,       
        //     py::arg("threshold"),
        //     D(signal_detector,set_threshold)
        // )

        // .def("get_fft_size",&signal_detector::set_fft_size,       
        //     D(signal_detector,set_fft_size)
        // )



        ;




}








