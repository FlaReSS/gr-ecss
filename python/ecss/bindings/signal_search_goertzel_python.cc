/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(signal_search_goertzel.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(c86326ce1e87f2aff25b870e355771ee)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ecss/signal_search_goertzel.h>
// pydoc.h is automatically generated in the build directory
#include <signal_search_goertzel_pydoc.h>

void bind_signal_search_goertzel(py::module& m)
{

    using signal_search_goertzel    = ::gr::ecss::signal_search_goertzel;


    py::class_<signal_search_goertzel, gr::block, gr::basic_block,
        std::shared_ptr<signal_search_goertzel>>(m, "signal_search_goertzel", D(signal_search_goertzel))

        .def(py::init(&signal_search_goertzel::make),
           py::arg("enable"),
           py::arg("average"),
           py::arg("freq_central"),
           py::arg("bandwidth"),
           py::arg("freq_cutoff"),
           py::arg("threshold"),
           py::arg("samp_rate"),
           D(signal_search_goertzel,make)
        )
        




        
        .def("get_freq_central",&signal_search_goertzel::get_freq_central,       
            D(signal_search_goertzel,get_freq_central)
        )


        
        .def("get_bandwidth",&signal_search_goertzel::get_bandwidth,       
            D(signal_search_goertzel,get_bandwidth)
        )


        
        .def("get_freq_cutoff",&signal_search_goertzel::get_freq_cutoff,       
            D(signal_search_goertzel,get_freq_cutoff)
        )


        
        .def("get_threshold",&signal_search_goertzel::get_threshold,       
            D(signal_search_goertzel,get_threshold)
        )


        
        .def("get_average",&signal_search_goertzel::get_average,       
            D(signal_search_goertzel,get_average)
        )


        
        .def("get_enable",&signal_search_goertzel::get_enable,       
            D(signal_search_goertzel,get_enable)
        )


        
        .def("get_size",&signal_search_goertzel::get_size,       
            D(signal_search_goertzel,get_size)
        )


        
        .def("set_freq_central",&signal_search_goertzel::set_freq_central,       
            py::arg("freq_central"),
            D(signal_search_goertzel,set_freq_central)
        )


        
        .def("set_bandwidth",&signal_search_goertzel::set_bandwidth,       
            py::arg("bandwidth"),
            D(signal_search_goertzel,set_bandwidth)
        )


        
        .def("set_freq_cutoff",&signal_search_goertzel::set_freq_cutoff,       
            py::arg("freq_cutoff"),
            D(signal_search_goertzel,set_freq_cutoff)
        )


        
        .def("set_threshold",&signal_search_goertzel::set_threshold,       
            py::arg("threshold"),
            D(signal_search_goertzel,set_threshold)
        )


        
        .def("set_average",&signal_search_goertzel::set_average,       
            py::arg("average"),
            D(signal_search_goertzel,set_average)
        )


        
        .def("set_enable",&signal_search_goertzel::set_enable,       
            py::arg("enable"),
            D(signal_search_goertzel,set_enable)
        )

        ;




}








