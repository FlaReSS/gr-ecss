/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(pll.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a12bc3b6a9891b68a72159bc8b0155e4)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <ecss/pll.h>
// pydoc.h is automatically generated in the build directory
#include <pll_pydoc.h>

void bind_pll(py::module& m)
{

    using pll    = ::gr::ecss::pll;


    py::class_<pll, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<pll>>(m, "pll", D(pll))

        .def(py::init(&pll::make),
           py::arg("samp_rate"),
           py::arg("N"),
           py::arg("coefficients"),
           py::arg("freq_central"),
           py::arg("bw"),
           D(pll,make)
        )
        




        
        .def("set_N",&pll::set_N,       
            py::arg("N"),
            D(pll,set_N)
        )


        
        .def("set_coefficients",&pll::set_coefficients,       
            py::arg("coefficients"),
            D(pll,set_coefficients)
        )


        
        .def("set_frequency",&pll::set_frequency,       
            py::arg("freq"),
            D(pll,set_frequency)
        )


        
        .def("set_phase",&pll::set_phase,       
            py::arg("phase"),
            D(pll,set_phase)
        )


        
        .def("set_freq_central",&pll::set_freq_central,       
            py::arg("freq"),
            D(pll,set_freq_central)
        )


        
        .def("set_bw",&pll::set_bw,       
            py::arg("bw"),
            D(pll,set_bw)
        )


        
        .def("get_coefficients",&pll::get_coefficients,       
            D(pll,get_coefficients)
        )


        
        .def("get_frequency",&pll::get_frequency,       
            D(pll,get_frequency)
        )


        
        .def("get_phase",&pll::get_phase,       
            D(pll,get_phase)
        )


        
        .def("get_freq_central",&pll::get_freq_central,       
            D(pll,get_freq_central)
        )


        
        .def("get_bw",&pll::get_bw,       
            D(pll,get_bw)
        )

        ;




}








