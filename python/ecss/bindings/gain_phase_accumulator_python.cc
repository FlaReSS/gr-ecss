/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(gain_phase_accumulator.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(a7a045bd38e5e487f6bbeae5dbdfacd0)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <ecss/gain_phase_accumulator.h>
// pydoc.h is automatically generated in the build directory
#include <gain_phase_accumulator_pydoc.h>

void bind_gain_phase_accumulator(py::module& m)
{

    using gain_phase_accumulator    = ::gr::ecss::gain_phase_accumulator;


    py::class_<gain_phase_accumulator, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<gain_phase_accumulator>>(m, "gain_phase_accumulator", D(gain_phase_accumulator))

        .def(py::init(&gain_phase_accumulator::make),
           py::arg("reset"),
           py::arg("uplink"),
           py::arg("downlink"),
           D(gain_phase_accumulator,make)
        )
        




        
        .def("get_reset",&gain_phase_accumulator::get_reset,       
            D(gain_phase_accumulator,get_reset)
        )


        
        .def("get_uplink",&gain_phase_accumulator::get_uplink,       
            D(gain_phase_accumulator,get_uplink)
        )


        
        .def("get_downlink",&gain_phase_accumulator::get_downlink,       
            D(gain_phase_accumulator,get_downlink)
        )


        
        .def("set_reset",&gain_phase_accumulator::set_reset,       
            py::arg("reset"),
            D(gain_phase_accumulator,set_reset)
        )


        
        .def("set_uplink",&gain_phase_accumulator::set_uplink,       
            py::arg("uplink"),
            D(gain_phase_accumulator,set_uplink)
        )


        
        .def("set_downlink",&gain_phase_accumulator::set_downlink,       
            py::arg("downlink"),
            D(gain_phase_accumulator,set_downlink)
        )

        ;




}








